jobs:
  build:
    runs-on: windows-latest
 
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
 
      - name: Set Date
        id: date
        run: echo "::set-output name=date::$(Get-Date -Format 'yyyy-MM-dd')"
        shell: pwsh
 
      - name: Load Test for Petstore
        uses: arjunsingh-dl/Main@v0.02
        env:
          NEOLOADWEB_URL: 'https://neoload-api.saas.neotys.com/'
          WORKSPACE: 'Default Workspace'
          NEOLOADWEB_TOKEN: ${{ secrets.NEOLOADWEB_TOKEN }}
          ZONEID: 'APSAWS'
          NUM_G: 1
          SCENARIO: LoadTest_PetStore
          AS_CODE: 'custom-resources/yaml/LoadTest_PetStore.yaml'
          TEST: New
          TEST_NAME: Load_CICD_jPetStore_10User_${{ steps.date.outputs.date }}_${{ github.run_number }}
 
      - name: Success - Test
        id: Status
        if: ${{ success() }}
        run: echo "TestStatus=Passed `n" >> $env:GITHUB_OUTPUT
        shell: pwsh
 
      - name: Failure - Test
        id: StatusFailure
        if: ${{ failure() }}
        run: echo "TestStatus=Failed `n" >> $env:GITHUB_OUTPUT
        shell: pwsh
 
      - name: Result - Fetching
        id: StoringResponse
        run: |
          # Fetch the latest test result from Neoload Web
          $response = Invoke-RestMethod -Uri "https://neoload-api.saas.neotys.com/v3/workspaces/${{ secrets.WORKSPACE_ID }}/test-results?limit=50&offset=0" -Headers @{accept="application/json"; accountToken="${{ secrets.NEOLOADWEB_TOKEN }}"}
          # Store the response in a file
          $response | ConvertTo-Json | Out-File -FilePath response.json
        shell: pwsh
 
      - name: Extract First Record ID
        id: extract-first-record-id
        run: |
          # Extract the first record's id from the JSON response
          $Test_Result_Id = (Get-Content response.json | ConvertFrom-Json)[0].id
          # Save the first record's id to the environment variable
          echo "Test_Result_Id=$Test_Result_Id" >> $env:GITHUB_ENV
        shell: pwsh
 
      - name: Download Test Result
        id: fetch-record-link
        run: |
          # Ensure the directory exists
          $downloadPath = "$env:USERPROFILE\\Downloads"
          if (-not (Test-Path -Path $downloadPath)) {
            New-Item -ItemType Directory -Force -Path $downloadPath
          }
          # Access the first record's id from the environment variable
          $first_record_id = $env:Test_Result_Id
          # Use the record ID in another curl command to get the link
          $pdfPath = "$downloadPath\\record.pdf"
          Write-Host "Downloading PDF to $pdfPath"
          curl -o $pdfPath -X POST "https://neoload-api.saas.neotys.com/v3/workspaces/${{ secrets.WORKSPACE_ID }}/test-results/$first_record_id/report" -H "accept: application/pdf" -H "accountToken: ${{ secrets.NEOLOADWEB_TOKEN }}" -H "Content-Type: application/json" -d "{\"language\": \"en\",\"timeZone\": \"Europe/Paris\"}"
        shell: pwsh
 
      - name: Check Downloaded PDF
        run: |
          # Check if the PDF was downloaded successfully
          $pdfPath = "$env:USERPROFILE\\Downloads\\record.pdf"
          if (Test-Path $pdfPath) {
            echo "PDF downloaded successfully."
          } else {
            echo "Failed to download PDF."
            exit 1
          }
        shell: pwsh
 
      - name: Upload PDF as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: record
          path: ${{ env.USERPROFILE }}\Downloads\record.pdf